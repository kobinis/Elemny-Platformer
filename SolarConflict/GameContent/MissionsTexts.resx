<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StartingNode_ArenaFight_Description" xml:space="preserve">
    <value>Enter the empire or federation base and fight in the arena.</value>
  </data>
  <data name="StartingNode_ArenaFight_Name" xml:space="preserve">
    <value>Test your skills in the arena</value>
  </data>
  <data name="StartingNode_DestoryPirateLord_Description" xml:space="preserve">
    <value>Pierce is bad for the trading business. 
Solve this problem for the trading guild and they will provide the star drive blueprints.</value>
  </data>
  <data name="StartingNode_DestoryPirateLord_Name" xml:space="preserve">
    <value>Destroy pirate lord Pierce</value>
  </data>
  <data name="StartingNode_DestroyEmpire_Description" xml:space="preserve">
    <value>Help the Federation destroy one of the Empire bases.</value>
  </data>
  <data name="StartingNode_DestroyEmpire_Name" xml:space="preserve">
    <value>Destroy one of the Empire bases</value>
  </data>
  <data name="StartingNode_DestroyFederation_Description" xml:space="preserve">
    <value>Help the Empire destroy the Federation base.</value>
  </data>
  <data name="StartingNode_DestroyFederation_Name" xml:space="preserve">
    <value>Destroy the Federation base</value>
  </data>
  <data name="StartingNode_Diamonds_Description" xml:space="preserve">
    <value>Go to Epsilon mines and mine 4 diamonds</value>
  </data>
  <data name="StartingNode_Diamonds_Name" xml:space="preserve">
    <value>Mine diamonds</value>
  </data>
  <data name="StartingNode_FixCommunication_Description" xml:space="preserve">
    <value>It's broken</value>
  </data>
  <data name="StartingNode_FixCommunication_Name" xml:space="preserve">
    <value>Fix the communication system</value>
  </data>
  <data name="StartingNode_FixWarpDrive_Description" xml:space="preserve">
    <value>We are stuck in this solar system until we fix the warp drive</value>
  </data>
  <data name="StartingNode_FixWarpDrive_Name" xml:space="preserve">
    <value>Fix the warp drive</value>
  </data>
  <data name="StartingNode_GetWarpDriveBluePrints_Description" xml:space="preserve">
    <value>We must get the blueprints to fix our warp drive, or we will be stuck here forever...</value>
  </data>
  <data name="StartingNode_GetWarpDriveBluePrints_Name" xml:space="preserve">
    <value>Get warp drive blueprints from the trading guild</value>
  </data>
  <data name="StartingNode_Gustav_Description" xml:space="preserve">
    <value>Gustav is a shady guy, 
but you will need to meet him to fix the communication system!</value>
  </data>
  <data name="StartingNode_Gustav_Name" xml:space="preserve">
    <value>Go meet Gustav</value>
  </data>
  <data name="StartingNode_MinesOfSadness_Description" xml:space="preserve">
    <value>The Ancient Miner has a mining laser in the mines of sadness</value>
  </data>
  <data name="StartingNode_MinesOfSadness_Name" xml:space="preserve">
    <value>Get the mining laser </value>
  </data>
  <data name="StartingNode_VisitEmpire_Description" xml:space="preserve">
    <value>Talk with the Empire before you choose sides.</value>
  </data>
  <data name="StartingNode_VisitEmpire_Name" xml:space="preserve">
    <value>Visit the Empire planet</value>
  </data>
  <data name="StartingNode_VisitFederation_Description" xml:space="preserve">
    <value>The Federation is looking for mercenaries.
Let's see what they can offer us.</value>
  </data>
  <data name="StartingNode_VisitFederation_Name" xml:space="preserve">
    <value>Visit the Federation base</value>
  </data>
  <data name="StartingNode_VisitTradingGuild_Description" xml:space="preserve">
    <value>They can fix our star drive</value>
  </data>
  <data name="StartingNode_VisitTradingGuild_Name" xml:space="preserve">
    <value>Get to the trading guild starbase</value>
  </data>
  <data name="StartingNode_ClaimKillEmpireReward_Description" xml:space="preserve">
    <value>You destoryed the Empire base. Go back to Admiral Kelor claim your reward.</value>
  </data>
  <data name="StartingNode_ClaimKillEmpireReward_Name" xml:space="preserve">
    <value>Claim your reward from the Federation</value>
  </data>
  <data name="StartingNode_ClaimKillFederationReward_Description" xml:space="preserve">
    <value>You destoryed the Federation base. Go back to General Travis claim your reward.</value>
  </data>
  <data name="StartingNode_ClaimKillFederationReward_Name" xml:space="preserve">
    <value>Claim your reward from the Empire</value>
  </data>
</root>